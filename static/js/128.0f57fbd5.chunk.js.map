{"version":3,"file":"static/js/128.0f57fbd5.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactModal/ContactModal.styled.jsx","components/ContactModal/ContactModal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  text-align: -webkit-center;\n  color: #f7ece1;\n  background-color: #242038;\n  padding: 30px;\n  width: 800px;\n  min-height: 100vh;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 35px;\n  font-weight: 700;\n`;\n\nexport const TitleSection = styled.h2`\n  font-size: 25px;\n  font-weight: 600;\n  text-align: start;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  & > :last-child {\n    flex-basis: 100%;\n    margin: 0 300px;\n    margin-top: 24px;\n  }\n\n  & > :nth-of-type(2) {\n    margin-right: 0;\n  }\n`;\n\nexport const ContainerInput = styled.div`\n  display: inline-block;\n  width: 200px;\n  margin-right: 38px;\n  text-align: start;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 25px;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n  background-color: #2e284a;\n  color: #f7ece1;\n  margin-top: 3px;\n\n  &:focus,\n  &:hover,\n  &:active {\n    outline: #382f5b solid 1px;\n  }\n`;\n\nexport const Label = styled.label`\n  padding-left: 5px;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  height: 30px;\n  border-radius: 5px;\n  border: 1px solid #292441;\n  background-color: #382f5b;\n  font-size: 14px;\n  font-weight: 500;\n  color: #f7ece1;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #4b3d7d;\n    outline: none;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getError = state => state.contacts.error;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  Form,\n  ContainerInput,\n  Input,\n  Label,\n  Button,\n} from './ContactForm.styled.jsx';\nimport { showErrorToast } from '../../functionError/showErrorToast.js';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations.js';\nimport { getContacts } from 'redux/contacts/selectors.js';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const telInputId = nanoid();\n  const submitButton = useRef();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!name || !number) {\n      showErrorToast('Please fill in all fields');\n      return;\n    }\n\n    const isValidName = /^[\\p{L}\\s]+$/u;\n    if (!isValidName.test(name)) {\n      showErrorToast('Please enter a valid name');\n      return;\n    }\n\n    const isValidPhone = /^[0-9\\s-]+$/;\n    if (!isValidPhone.test(number)) {\n      showErrorToast('Please enter a valid phone number');\n      return;\n    }\n\n    const isContactExistName = isContactExist(name);\n    if (isContactExistName) {\n      showErrorToast('Already exists!');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n    submitButton.current.focus();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isContactExist = name => {\n    const isExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    return isExist;\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ContainerInput>\n        <Label htmlFor={nameInputId}>\n          Name\n          <Input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            id={nameInputId}\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n      </ContainerInput>\n      <ContainerInput>\n        <Label htmlFor={telInputId}>\n          Phone\n          <Input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter phone number\"\n            id={telInputId}\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n      </ContainerInput>\n      <Button type=\"submit\" ref={submitButton}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\nimport { RiDeleteBin3Line } from 'react-icons/ri';\nimport { CiEdit } from 'react-icons/ci';\n\nexport const InfoContact = styled.p`\n  margin: 0;\n  padding: 0;\n  width: 110px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  height: 30px;\n  width: 100px;\n  margin-right: 10px;\n\n  padding: 0 15px;\n\n  border-radius: 5px;\n  border: 1px solid #292441;\n  background-color: #382f5b;\n  font-size: 14px;\n  font-weight: 500;\n  color: #f7ece1;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #4b3d7d;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const DeleteIcon = styled(RiDeleteBin3Line)`\n  width: 14px;\n  height: 14px;\n  margin-right: 5px;\n`;\n\nexport const EditIcon = styled(CiEdit)`\n  width: 14px;\n  height: 14px;\n  margin-right: 5px;\n`;\n","import styled from '@emotion/styled';\nimport { BsCheck2All } from 'react-icons/bs';\nimport { MdOutlineCancel } from 'react-icons/md';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  height: 400px;\n  padding: 20px;\n  background-color: #242038;\n  border-radius: 5px;\n`;\n\nexport const Form = styled.form`\n& label {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n  font-size: 16px;\n  color: #f7ece1;\n}\n\n& input {\nmargin-top: 10px;\nheight: 25px;\nwidth: 280px;\npadding: 5px 10px;\nborder-radius: 5px;\nborder: none;\nbackground-color: #2e284a;\ncolor: #f7ece1;\n\n&: focus,\n&: hover,\n&: active {\noutline: #382f5b solid 1px;\n}\n}\n\n\n& button {\n  display: inline-block;\n  height: 30px;\n  width: 150px;\n  border-radius: 5px;\n  border: 1px solid #292441;\n  background-color: #382f5b;\n  font-size: 14px;\n  font-weight: 500;\n  color: #f7ece1;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-top: 20px;\n  &:hover,\n  &:focus {\n    background-color: #4b3d7d;\n    outline: none;\n  }\n}\n`;\n\nexport const ContainerButton = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const UpdateIcon = styled(BsCheck2All)`\n  width: 14px;\n  height: 14px;\n  margin-right: 5px;\n`;\n\nexport const CancelIcon = styled(MdOutlineCancel)`\n  width: 14px;\n  height: 14px;\n  margin-right: 5px;\n`;\n","import { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { updateContact } from '../../redux/contacts/operations';\nimport {\n  Overlay,\n  ModalContainer,\n  Form,\n  ContainerButton,\n  UpdateIcon,\n  CancelIcon,\n} from './ContactModal.styled';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport const ContactModal = ({ onClose, contact }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    dispatch(\n      updateContact({\n        id: contact.id,\n        contact: {\n          name: form.name.value,\n          number: form.number.value,\n        },\n      })\n    );\n    form.reset();\n    onClose();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContainer>\n        <Form onSubmit={handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n            />\n          </label>\n          <ContainerButton>\n            <button type=\"submit\">\n              <UpdateIcon />\n              Update contact\n            </button>\n            <button type=\"button\" onClick={onClose}>\n              <CancelIcon />\n              Cancel\n            </button>\n          </ContainerButton>\n        </Form>\n      </ModalContainer>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import propTypes from 'prop-types';\nimport {\n  InfoContact,\n  Button,\n  DeleteIcon,\n  EditIcon,\n} from './ContactListItem.styled.jsx';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport { ContactModal } from 'components/ContactModal/ContactModal.jsx';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <InfoContact>{contact.name}</InfoContact>\n      <InfoContact>{contact.number}</InfoContact>\n      <div>\n        <Button type=\"button\" onClick={openModal}>\n          <EditIcon />\n          Edit\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          <DeleteIcon />\n          Delete\n        </Button>\n      </div>\n\n      {isModalOpen && <ContactModal onClose={closeModal} contact={contact} />}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: propTypes.shape({\n    id: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const ListContacts = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  color: #f7ece1;\n  text-align: start;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #27223d;\n  color: #f7ece1;\n  font-size: 16px;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.0075);\n  }\n`;\n","import { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { ListContacts, Contact } from './ContactList.styled.jsx';\nimport { useSelector } from 'react-redux';\n\nimport {\n  getLoading,\n  getError,\n  getVisibleContacts,\n} from 'redux/contacts/selectors.js';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const isLoading = useSelector(getLoading);\n  const isError = useSelector(getError);\n\n  return (\n    <ListContacts>\n      {isLoading && !isError && <Loader />}\n      {contacts.map(contact => {\n        return (\n          <Contact key={contact.id}>\n            <ContactListItem contact={contact} />\n          </Contact>\n        );\n      })}\n    </ListContacts>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  text-align: start;\n  color: #f7ece1;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n\n  input {\n    height: 18px;\n    width: 200px;\n    border: none;\n    border-radius: 5px;\n    padding: 5px;\n    background-color: #2e284a;\n    color: #f7ece1;\n    margin-top: 7px;\n  }\n\n    input:focus,\n    input:hover,\n    input:active { \n    outline: #382F5B solid 1px;\n    {\n`;\n","import { FilterContainer, Label } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilterHandler = event => {\n    const newFilter = event.currentTarget.value.toLowerCase().trim();\n    dispatch(changeFilter(newFilter));\n  };\n\n  return (\n    <FilterContainer>\n      <Label>\n        Find contacts by name <br />\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={changeFilterHandler}\n        ></input>\n      </Label>\n    </FilterContainer>\n  );\n};\n","import { Container, Title, TitleSection } from '../components/App/App.styled';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <TitleSection>Contacts</TitleSection>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","TitleSection","h2","_templateObject3","Form","form","ContainerInput","Input","input","Label","label","_templateObject4","Button","button","_templateObject5","getContacts","state","contacts","items","getFilter","filter","getError","error","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","nameInputId","nanoid","telInputId","submitButton","useRef","dispatch","useDispatch","useSelector","handleChange","event","_event$currentTarget","currentTarget","value","reset","isContactExist","some","_jsxs","onSubmit","preventDefault","test","showErrorToast","addContact","current","focus","children","_jsx","htmlFor","className","type","placeholder","id","onChange","ref","InfoContact","p","DeleteIcon","RiDeleteBin3Line","EditIcon","CiEdit","Overlay","ModalContainer","ContainerButton","UpdateIcon","BsCheck2All","CancelIcon","MdOutlineCancel","_templateObject6","modalRoot","document","getElementById","ContactModal","_ref","onClose","_event$target","target","createPortal","onClick","updateContact","ContactListItem","isModalOpen","setIsModalOpen","_Fragment","deleteContact","ListContacts","ul","Contact","li","ContactList","isLoading","isError","Loader","map","FilterContainer","Filter","newFilter","trim","changeFilter","useEffect","fetchContacts"],"sourceRoot":""}