{"version":3,"file":"static/js/609.b8eb75e7.chunk.js","mappings":"mPAEaA,EAAOC,EAAAA,EAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,i1B,6BCIlBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAQD,EAAA,GAAEE,EAAOF,EAAA,GAElBG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,OAAtBb,EAAIY,EAAJZ,KAAMc,EAAKF,EAALE,MACd,OAAQd,GACN,IAAK,OACHC,EAAQa,GACR,MACF,IAAK,QACHT,EAASS,GACT,MACF,IAAK,WACHL,EAAQK,GACR,MACF,QACE,OAEN,EAkCA,OACEC,EAAAA,EAAAA,MAAC3B,EAAI,CAAC4B,SAjCa,SAAAL,GAGnB,GAFAA,EAAMM,iBAEDjB,GAASI,GAAUI,EAKxB,GAAIR,EAAKkB,OAAS,GAAKlB,EAAKkB,OAAS,IACnCC,EAAAA,EAAAA,GAAe,iDAGjB,GAAKf,EAAMgB,SAAS,KAKpB,GAAIZ,EAASU,OAAS,GACpBC,EAAAA,EAAAA,GAAe,8CADjB,CAKA,IAAM7B,EAAOqB,EAAME,OACnBnB,GACE2B,EAAAA,EAAAA,IAAS,CACPrB,KAAMV,EAAKgC,SAAStB,KAAKc,MACzBV,MAAOd,EAAKgC,SAASlB,MAAMU,MAC3BN,SAAUlB,EAAKgC,SAASd,SAASM,SAGrCxB,EAAKiC,OAVL,MAPEJ,EAAAA,EAAAA,GAAe,mCATfA,EAAAA,EAAAA,GAAe,4BA2BnB,EAE+BK,SAAA,EAC3BT,EAAAA,EAAAA,MAAA,SAAAS,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAO1B,KAAK,OAAOc,MAAOd,EAAM2B,SAAUjB,QAExDK,EAAAA,EAAAA,MAAA,SAAAS,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACL1B,KAAK,QACLc,MAAOV,EACPuB,SAAUjB,QAGdK,EAAAA,EAAAA,MAAA,SAAAS,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACL1B,KAAK,WACLc,MAAON,EACPmB,SAAUjB,QAGde,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,eAG5B,ECtFaI,EAAYvC,EAAAA,EAAOwC,IAAGtC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iOCSnC,EARiB,WACf,OACEiC,EAAAA,EAAAA,KAACG,EAAS,CAAAJ,UACRC,EAAAA,EAAAA,KAAChC,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.styled.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nbackground-color: #242038;\npadding: 30px;\nborder-radius: 5px;\nheight: 350px;\n\n& label {\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\nmargin-bottom: 20px;\nfont-size: 16px;\n}\n\n& input {\nmargin-top: 10px;\nheight: 25px;\nwidth: 320px;\npadding: 5px 10px;\nborder-radius: 5px;\nborder: none;\nbackground-color: #2e284a;\ncolor: #f7ece1;\n\n&: focus,\n&: hover,\n&: active {\noutline: #382f5b solid 1px;\n}\n}\n\n\n& button {\n  display: inline-block;\n  height: 30px;\n  width: 150px;\n  border-radius: 5px;\n  border: 1px solid #292441;\n  background-color: #382f5b;\n  font-size: 14px;\n  font-weight: 500;\n  color: #f7ece1;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-top: 40px;\n  &:hover,\n  &:focus {\n    background-color: #4b3d7d;\n    outline: none;\n  }\n}\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Form } from './RegisterForm.styled';\nimport { useState } from 'react';\nimport { showErrorToast } from '../../functionError/showErrorToast';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPass] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPass(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!name || !email || !password) {\n      showErrorToast('Please fill in all fields');\n      return;\n    }\n\n    if (name.length < 3 || name.length > 20) {\n      showErrorToast('Name must be between 3 and 20 characters');\n      return;\n    }\n    if (!email.includes('@')) {\n      showErrorToast('Please enter a valid email');\n      return;\n    }\n\n    if (password.length < 7) {\n      showErrorToast('Password must be at least 7 characters');\n      return;\n    }\n\n    const form = event.target;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n      </label>\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Register</button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  text-align: -webkit-center;\n  color: #f7ece1;\n  padding: 30px;\n  width: 400px;\n  min-height: 68vh;\n  border-radius: 10px;\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Container } from './Register.styled';\n\nconst Register = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n};\n\nexport default Register;\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPass","handleChange","event","_event$target","target","value","_jsxs","onSubmit","preventDefault","length","showErrorToast","includes","register","elements","reset","children","_jsx","type","onChange","Container","div"],"sourceRoot":""}